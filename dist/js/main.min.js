"use strict";function _createForOfIteratorHelper(e,t){var n,r,o,a,i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(i)return r=!(n=!0),{s:function(){i=i.call(e)},n:function(){var e=i.next();return n=e.done,e},e:function(e){r=!0,o=e},f:function(){try{n||null==i.return||i.return()}finally{if(r)throw o}}};if(Array.isArray(e)||(i=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length)return i&&(e=i),a=0,{s:t=function(){},n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){var n;if(e)return"string"==typeof e?_arrayLikeToArray(e,t):"Map"===(n="Object"===(n=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:n)||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var primaryNavigation=document.querySelector(".primary-navigation"),navToggle=primaryNavigation.querySelector(".toggle-button"),primaryNav=primaryNavigation.querySelector("#primary-nav"),featuresControlBtns=document.querySelectorAll(".features-tabs__tab-button"),featureTabs=document.querySelectorAll(".features-tab"),accordion=document.querySelector(".accordion"),accordionBtns=accordion.querySelectorAll(".accordion__control"),optInForm=document.querySelector(".opt-in-form"),optInFormInputBox=optInForm.querySelector(".opt-in-form__input-box"),optInFormInput=optInForm.querySelector('.opt-in-form__input[type="email"]'),optInFormSubmitBtn=optInForm.querySelector('button[type="submit"]'),optInFormMessage=optInForm.querySelector(".opt-in-form__message"),EMAIL_REGEX=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,KEY_CODES={end:35,home:36,arrowUp:38,arrowDown:40},handleNavToggle=function(e){var t="true"===navToggle.getAttribute("aria-expanded");navToggle.setAttribute("aria-expanded",!t),primaryNavigation.toggleAttribute("data-nav-expanded",!t),navigationExpanding(!t)},navigationExpanding=function(e){e?(primaryNav.setAttribute("data-expanded",!0),primaryNav.classList.add("slide-in"),primaryNav.addEventListener("animationend",function(){return primaryNav.classList.remove("slide-in")},{once:!0})):(primaryNav.classList.add("slide-out"),primaryNav.addEventListener("animationend",function(){primaryNav.classList.remove("slide-out"),primaryNav.removeAttribute("data-expanded")},{once:!0}))},handleFeaturesControlButton=function(e){var t,e=e.target;"true"!==e.getAttribute("aria-expanded")&&(collapseAllFeaturesBtns(),hideAllFeaturesTabs(),updateUnderlineOrigin(parseInt(e.dataset.index)),e.setAttribute("aria-expanded",!0),e="#"+e.getAttribute("aria-controls"),(t=document.querySelector(e)).classList.add("active"),t.classList.add("showing"),t.addEventListener("animationend",function(){return t.classList.remove("showing")},{once:!0}))},collapseAllFeaturesBtns=function(){var e,t=_createForOfIteratorHelper(featuresControlBtns);try{for(t.s();!(e=t.n()).done;)e.value.setAttribute("aria-expanded",!1)}catch(e){t.e(e)}finally{t.f()}},updateUnderlineOrigin=function(n){featuresControlBtns.forEach(function(e,t){t===n&&("left"===e.dataset.undelineOrigin?e.dataset.undelineOrigin="right":e.dataset.undelineOrigin="left"),t<n&&e.setAttribute("data-underline-origin","right"),n<t&&e.setAttribute("data-underline-origin","left")})},hideAllFeaturesTabs=function(){featureTabs.forEach(function(e){return e.classList.remove("active")})},initFeaturesControlBtns=function(){featuresControlBtns.forEach(function(e,t){return e.setAttribute("data-index",t)})},handleKeyPress=function(t){var e=t.keyCode,n=Array.from(accordionBtns).findIndex(function(e){return e===t.target});switch(e){case KEY_CODES.arrowUp:t.preventDefault(),moveFocusUp(n);break;case KEY_CODES.arrowDown:t.preventDefault(),moveFocusDown(n);break;case KEY_CODES.home:t.preventDefault(),moveFocusToFirstElement();break;case KEY_CODES.end:t.preventDefault(),moveFocusToLastElement()}},moveFocusUp=function(e){e=(accordionBtns.length+e-1)%accordionBtns.length;return accordionBtns[e].focus(),e},moveFocusDown=function(e){e=(e+1)%accordionBtns.length;return accordionBtns[e].focus(),e},moveFocusToFirstElement=function(e){return accordionBtns[0].focus(),0},moveFocusToLastElement=function(e){return accordionBtns[accordionBtns.length-1].focus(),accordionBtns.length-1},handleOptInSubmit=function(e){e.preventDefault();e=optInFormInput.value;isBlank(e)?showMessage("error","This field cannot be empty"):isValidEmail(e)?showMessage("success","Successfully registered. Check your email box."):showMessage("error","Whoops, make sure it's an email")},showMessage=function(e,t){optInFormInputBox.setAttribute("data-status",e),optInFormMessage.innerText=t},isValidEmail=function(e){return EMAIL_REGEX.test(e)},isBlank=function(e){return""===e};navToggle.addEventListener("click",handleNavToggle),featuresControlBtns.forEach(function(e){return e.addEventListener("click",handleFeaturesControlButton)}),accordionBtns.forEach(function(e){return e.addEventListener("keydown",handleKeyPress)}),optInFormSubmitBtn.addEventListener("click",handleOptInSubmit),initFeaturesControlBtns();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsicHJpbWFyeU5hdmlnYXRpb24iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJuYXZUb2dnbGUiLCJwcmltYXJ5TmF2IiwiZmVhdHVyZXNDb250cm9sQnRucyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJhY2NvcmRpb25CdG5zIiwiYWNjb3JkaW9uIiwiZmVhdHVyZVRhYnMiLCJvcHRJbkZvcm1JbnB1dEJveCIsIm9wdEluRm9ybSIsIm9wdEluRm9ybU1lc3NhZ2UiLCJlbmQiLCJFTUFJTF9SRUdFWCIsImhvbWUiLCJhcnJvd1VwIiwiS0VZX0NPREVTIiwiYXJyb3dEb3duIiwiaGFuZGxlTmF2VG9nZ2xlIiwiZSIsImlzRXhwYW5kZWQiLCJnZXRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJ0b2dnbGVBdHRyaWJ1dGUiLCJuYXZpZ2F0aW9uRXhwYW5kaW5nIiwic2hvdWxkRXhwYW5kIiwiYWRkIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwib25jZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVBdHRyaWJ1dGUiLCJoYW5kbGVGZWF0dXJlc0NvbnRyb2xCdXR0b24iLCJ1cGRhdGVVbmRlcmxpbmVPcmlnaW4iLCJidXR0b24iLCJ0YXJnZXQiLCJjb2xsYXBzZUFsbEZlYXR1cmVzQnRucyIsImhpZGVBbGxGZWF0dXJlc1RhYnMiLCJwYXJzZUludCIsImRhdGFzZXQiLCJpbmRleCIsInRhcmdldFRhYklkIiwidGFyZ2V0VGFiRWxlbWVudCIsIl9zdGVwIiwiX2l0ZXJhdG9yIiwiX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiLCJzIiwibiIsImRvbmUiLCJlcnIiLCJmIiwicGl2b3RJZHgiLCJjdHJsQnRuIiwiaWR4IiwidW5kZWxpbmVPcmlnaW4iLCJmb3JFYWNoIiwidGFiIiwiaW5pdEZlYXR1cmVzQ29udHJvbEJ0bnMiLCJoYW5kbGVLZXlQcmVzcyIsIkFycmF5IiwiZmluZEluZGV4IiwiYnRuIiwia2V5Q29kZSIsInByZXZlbnREZWZhdWx0IiwibW92ZUZvY3VzVXAiLCJtb3ZlRm9jdXNEb3duIiwibW92ZUZvY3VzVG9GaXJzdEVsZW1lbnQiLCJmcm9tIiwibW92ZUZvY3VzVG9MYXN0RWxlbWVudCIsInByZXZJZHgiLCJsZW5ndGgiLCJuZXh0SWR4IiwiXyIsImZvY3VzIiwidmFsdWUiLCJvcHRJbkZvcm1JbnB1dCIsImlzVmFsaWRFbWFpbCIsInNob3dNZXNzYWdlIiwibWVzc2FnZSIsInN0YXR1cyIsImlubmVyVGV4dCIsImVtYWlsIiwidGVzdCIsImlzQmxhbmsiLCJvcHRJbkZvcm1TdWJtaXRCdG4iXSwibWFwcGluZ3MiOiJvb0NBQ0EsSUFBTUEsa0JBQW9CQyxTQUFTQyxjQUFjLHFCQUFxQixFQUNoRUMsVUFBWUgsa0JBQWtCRSxjQUFjLGdCQUFnQixFQUM1REUsV0FBYUosa0JBQWtCRSxjQUFjLGNBQWMsRUFIakVHLG9CQUFBSixTQUFBSyxpQkFBQSw0QkFBQSxFQUNNTixZQUFBQSxTQUFvQkMsaUJBQXNCLGVBQUMsRUFFM0NHLFVBQWFKLFNBQUFBLGNBQWtCRSxZQUFjLEVBQ25ESyxjQUFBQyxVQUFBRixpQkFBQSxxQkFBQSxFQUVNRyxVQUFjUixTQUFTSyxjQUFBQSxjQUFpQixFQUM5Q0ksa0JBQUFDLFVBQUFULGNBQUEseUJBQUEsRUFDTU0sZUFBWVAsVUFBU0MsY0FBYyxtQ0FBYSxFQUNoREssbUJBQWdCQyxVQUFVRixjQUFpQix1QkFBc0IsRUFDdkVNLGlCQUFBRCxVQUFBVCxjQUFBLHVCQUFBLEVBRU1RLFlBQ04sd0pBRU1FLFVBQUFBLENBRU5DLElBQU1DLEdBRU5DLEtBQUEsR0FDQUMsUUFBTUMsR0FJTEMsVUFITyxFQUlSLEVBQUNDLGdCQUFBLFNBQUFDLEdBSUEsSUFBTUMsRUFBeUQsU0FBNUNsQixVQUFVbUIsYUFBYSxlQUFlLEVBRjFEbkIsVUFBQW9CLGFBQUEsZ0JBQUEsQ0FBQUYsQ0FBQSxFQUNBckIsa0JBQXFCd0IsZ0JBQWZMLG9CQUF1QixDQUFBRSxDQUFBLEVBSTVCSSxvQkFIbUJ0QixD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QUFBNEIsY0FBQSxDQUFBLENBQUEsRUFFRDBCLG1CQUFxQnRELGlCQUFmOEMsUUFBZUssaUJBQUssRUFBMkJ4Qix3QkFBQSIsImZpbGUiOiJtYWluLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIG5hdmlnYXRpb24gZWxlbWVudHMgKi9cclxuY29uc3QgcHJpbWFyeU5hdmlnYXRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJpbWFyeS1uYXZpZ2F0aW9uJyk7XHJcbmNvbnN0IG5hdlRvZ2dsZSA9IHByaW1hcnlOYXZpZ2F0aW9uLnF1ZXJ5U2VsZWN0b3IoJy50b2dnbGUtYnV0dG9uJyk7XHJcbmNvbnN0IHByaW1hcnlOYXYgPSBwcmltYXJ5TmF2aWdhdGlvbi5xdWVyeVNlbGVjdG9yKCcjcHJpbWFyeS1uYXYnKTtcclxuLyogZmVhdHVyZSB0YWJzIGVsZW1lbnRzICovXHJcbmNvbnN0IGZlYXR1cmVzQ29udHJvbEJ0bnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZmVhdHVyZXMtdGFic19fdGFiLWJ1dHRvbicpO1xyXG5jb25zdCBmZWF0dXJlVGFicyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5mZWF0dXJlcy10YWInKTtcclxuLyogYWNjb3JkaW9uIGVsZW1lbnRzICovXHJcbmNvbnN0IGFjY29yZGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hY2NvcmRpb24nKTtcclxuY29uc3QgYWNjb3JkaW9uQnRucyA9IGFjY29yZGlvbi5xdWVyeVNlbGVjdG9yQWxsKCcuYWNjb3JkaW9uX19jb250cm9sJyk7XHJcbi8qIGZvcm0gZWxlbWVudHMgKi9cclxuY29uc3Qgb3B0SW5Gb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm9wdC1pbi1mb3JtJyk7XHJcbmNvbnN0IG9wdEluRm9ybUlucHV0Qm94ID0gb3B0SW5Gb3JtLnF1ZXJ5U2VsZWN0b3IoJy5vcHQtaW4tZm9ybV9faW5wdXQtYm94Jyk7XHJcbmNvbnN0IG9wdEluRm9ybUlucHV0ID0gb3B0SW5Gb3JtLnF1ZXJ5U2VsZWN0b3IoJy5vcHQtaW4tZm9ybV9faW5wdXRbdHlwZT1cImVtYWlsXCJdJyk7XHJcbmNvbnN0IG9wdEluRm9ybVN1Ym1pdEJ0biA9IG9wdEluRm9ybS5xdWVyeVNlbGVjdG9yKCdidXR0b25bdHlwZT1cInN1Ym1pdFwiXScpO1xyXG5jb25zdCBvcHRJbkZvcm1NZXNzYWdlID0gb3B0SW5Gb3JtLnF1ZXJ5U2VsZWN0b3IoJy5vcHQtaW4tZm9ybV9fbWVzc2FnZScpO1xyXG5cclxuY29uc3QgRU1BSUxfUkVHRVggPVxyXG5cdC9eKChbXjw+KClbXFxdXFxcXC4sOzpcXHNAXCJdKyhcXC5bXjw+KClbXFxdXFxcXC4sOzpcXHNAXCJdKykqKXwoXCIuK1wiKSlAKChcXFtbMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcLlswLTldezEsM31cXC5bMC05XXsxLDN9XFxdKXwoKFthLXpBLVpcXC0wLTldK1xcLikrW2EtekEtWl17Mix9KSkkLztcclxuLyoga2F5IG1hcHBpbmcgKi9cclxuY29uc3QgS0VZX0NPREVTID0ge1xyXG5cdGVuZDogMzUsXHJcblx0aG9tZTogMzYsXHJcblx0YXJyb3dVcDogMzgsXHJcblx0YXJyb3dEb3duOiA0MCxcclxufTtcclxuXHJcbi8qIG5hdmlnYXRpb24gaGFuZGxpbmcgKi9cclxuY29uc3QgaGFuZGxlTmF2VG9nZ2xlID0gZSA9PiB7XHJcblx0Y29uc3QgaXNFeHBhbmRlZCA9IG5hdlRvZ2dsZS5nZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnKSA9PT0gJ3RydWUnO1xyXG5cdG5hdlRvZ2dsZS5zZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnLCAhaXNFeHBhbmRlZCk7XHJcblx0cHJpbWFyeU5hdmlnYXRpb24udG9nZ2xlQXR0cmlidXRlKCdkYXRhLW5hdi1leHBhbmRlZCcsICFpc0V4cGFuZGVkKTtcclxuXHRuYXZpZ2F0aW9uRXhwYW5kaW5nKCFpc0V4cGFuZGVkKTtcclxufTtcclxuXHJcbmNvbnN0IG5hdmlnYXRpb25FeHBhbmRpbmcgPSBzaG91bGRFeHBhbmQgPT4ge1xyXG5cdGlmIChzaG91bGRFeHBhbmQpIHtcclxuXHRcdHByaW1hcnlOYXYuc2V0QXR0cmlidXRlKCdkYXRhLWV4cGFuZGVkJywgdHJ1ZSk7XHJcblx0XHRwcmltYXJ5TmF2LmNsYXNzTGlzdC5hZGQoJ3NsaWRlLWluJyk7XHJcblx0XHRwcmltYXJ5TmF2LmFkZEV2ZW50TGlzdGVuZXIoJ2FuaW1hdGlvbmVuZCcsICgpID0+IHByaW1hcnlOYXYuY2xhc3NMaXN0LnJlbW92ZSgnc2xpZGUtaW4nKSwgeyBvbmNlOiB0cnVlIH0pO1xyXG5cdH0gZWxzZSB7XHJcblx0XHRwcmltYXJ5TmF2LmNsYXNzTGlzdC5hZGQoJ3NsaWRlLW91dCcpO1xyXG5cdFx0cHJpbWFyeU5hdi5hZGRFdmVudExpc3RlbmVyKFxyXG5cdFx0XHQnYW5pbWF0aW9uZW5kJyxcclxuXHRcdFx0KCkgPT4ge1xyXG5cdFx0XHRcdHByaW1hcnlOYXYuY2xhc3NMaXN0LnJlbW92ZSgnc2xpZGUtb3V0Jyk7XHJcblx0XHRcdFx0cHJpbWFyeU5hdi5yZW1vdmVBdHRyaWJ1dGUoJ2RhdGEtZXhwYW5kZWQnKTtcclxuXHRcdFx0fSxcclxuXHRcdFx0eyBvbmNlOiB0cnVlIH1cclxuXHRcdCk7XHJcblx0fVxyXG59O1xyXG5cclxuLyogZmVhdHVyZXMgdGFicyBoYW5kbGluZyAqL1xyXG5jb25zdCBoYW5kbGVGZWF0dXJlc0NvbnRyb2xCdXR0b24gPSBlID0+IHtcclxuXHRjb25zdCBidXR0b24gPSBlLnRhcmdldDtcclxuXHQvKiBpZiBjbGlja2VkIG9uIGN1cnJlbnQgZXhwYW5kZWQgdGFiLCByZXR1cm4gKi9cclxuXHRpZiAoYnV0dG9uLmdldEF0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcpID09PSAndHJ1ZScpIHJldHVybjtcclxuXHJcblx0LyogaGlkZSBhbGwgdGFicyBhbmQgY29sbGFwc2UgYWxsIGJ1dHRvbnMgKi9cclxuXHRjb2xsYXBzZUFsbEZlYXR1cmVzQnRucygpO1xyXG5cdGhpZGVBbGxGZWF0dXJlc1RhYnMoKTtcclxuXHQvKiB1cGRhdGUgYnV0dG9ucyBhbmQgY3VycmVudCBidXR0b24gKi9cclxuXHR1cGRhdGVVbmRlcmxpbmVPcmlnaW4ocGFyc2VJbnQoYnV0dG9uLmRhdGFzZXQuaW5kZXgpKTtcclxuXHRidXR0b24uc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgdHJ1ZSk7XHJcblx0LyogZ2V0IHRhYiB0YXJnZXRlZCBieSB0aGUgYnV0dG9uIGFuZCB1cGRhdGUgaXQgKi9cclxuXHRjb25zdCB0YXJnZXRUYWJJZCA9ICcjJyArIGJ1dHRvbi5nZXRBdHRyaWJ1dGUoJ2FyaWEtY29udHJvbHMnKTtcclxuXHRjb25zdCB0YXJnZXRUYWJFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXRUYWJJZCk7XHJcblx0dGFyZ2V0VGFiRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxuXHR0YXJnZXRUYWJFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3Nob3dpbmcnKTtcclxuXHR0YXJnZXRUYWJFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2FuaW1hdGlvbmVuZCcsICgpID0+IHRhcmdldFRhYkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnc2hvd2luZycpLCB7IG9uY2U6IHRydWUgfSk7XHJcbn07XHJcblxyXG5jb25zdCBjb2xsYXBzZUFsbEZlYXR1cmVzQnRucyA9ICgpID0+IHtcclxuXHRmb3IgKGNvbnN0IGN0cmxCdG4gb2YgZmVhdHVyZXNDb250cm9sQnRucykge1xyXG5cdFx0Y3RybEJ0bi5zZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnLCBmYWxzZSk7XHJcblx0fVxyXG59O1xyXG5cclxuY29uc3QgdXBkYXRlVW5kZXJsaW5lT3JpZ2luID0gcGl2b3RJZHggPT4ge1xyXG5cdGZlYXR1cmVzQ29udHJvbEJ0bnMuZm9yRWFjaCgoY3RybEJ0biwgaWR4KSA9PiB7XHJcblx0XHQvKiBpZiB0aGUgY3VycmVudCBvdmVybG9va2VkIGluZGV4LCBjaGFuZ2UgZGlyZWN0aW9uIGRlcGVuZGluZyBvbiBwcmV2aW91cyBkaXJlY3Rpb24gKi9cclxuXHRcdGlmIChpZHggPT09IHBpdm90SWR4KVxyXG5cdFx0XHRjdHJsQnRuLmRhdGFzZXQudW5kZWxpbmVPcmlnaW4gPT09ICdsZWZ0J1xyXG5cdFx0XHRcdD8gKGN0cmxCdG4uZGF0YXNldC51bmRlbGluZU9yaWdpbiA9ICdyaWdodCcpXHJcblx0XHRcdFx0OiAoY3RybEJ0bi5kYXRhc2V0LnVuZGVsaW5lT3JpZ2luID0gJ2xlZnQnKTtcclxuXHRcdC8qIGVsc2UgY2hhbmdlIGRlcGVuZGluZyBvbiB0aGUgcG9zaXRpb25pbmcgdG8gdGhlIGN1cnJlbnQgaW5kZXggKi9cclxuXHRcdGlmIChpZHggPCBwaXZvdElkeCkgY3RybEJ0bi5zZXRBdHRyaWJ1dGUoJ2RhdGEtdW5kZXJsaW5lLW9yaWdpbicsICdyaWdodCcpO1xyXG5cdFx0aWYgKGlkeCA+IHBpdm90SWR4KSBjdHJsQnRuLnNldEF0dHJpYnV0ZSgnZGF0YS11bmRlcmxpbmUtb3JpZ2luJywgJ2xlZnQnKTtcclxuXHR9KTtcclxufTtcclxuXHJcbmNvbnN0IGhpZGVBbGxGZWF0dXJlc1RhYnMgPSAoKSA9PiB7XHJcblx0ZmVhdHVyZVRhYnMuZm9yRWFjaCh0YWIgPT4gdGFiLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpKTtcclxufTtcclxuXHJcbi8qIGluaXRpYWxpemF0aW9uIGZvciB0YWJzICovXHJcbmNvbnN0IGluaXRGZWF0dXJlc0NvbnRyb2xCdG5zID0gKCkgPT4ge1xyXG5cdGZlYXR1cmVzQ29udHJvbEJ0bnMuZm9yRWFjaCgoY3RybEJ0biwgaWR4KSA9PiBjdHJsQnRuLnNldEF0dHJpYnV0ZSgnZGF0YS1pbmRleCcsIGlkeCkpO1xyXG59O1xyXG5cclxuLyogYWNjb3JkaW9uIGhhbmRsaW5nICovXHJcbmNvbnN0IGhhbmRsZUtleVByZXNzID0gZSA9PiB7XHJcblx0Y29uc3Qga2V5Q29kZSA9IGUua2V5Q29kZTtcclxuXHRjb25zdCBpZHggPSBBcnJheS5mcm9tKGFjY29yZGlvbkJ0bnMpLmZpbmRJbmRleChidG4gPT4gYnRuID09PSBlLnRhcmdldCk7XHJcblx0c3dpdGNoIChrZXlDb2RlKSB7XHJcblx0XHRjYXNlIEtFWV9DT0RFUy5hcnJvd1VwOlxyXG5cdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHRcdG1vdmVGb2N1c1VwKGlkeCk7XHJcblx0XHRcdGJyZWFrO1xyXG5cdFx0Y2FzZSBLRVlfQ09ERVMuYXJyb3dEb3duOlxyXG5cdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHRcdG1vdmVGb2N1c0Rvd24oaWR4KTtcclxuXHRcdFx0YnJlYWs7XHJcblx0XHRjYXNlIEtFWV9DT0RFUy5ob21lOlxyXG5cdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHRcdG1vdmVGb2N1c1RvRmlyc3RFbGVtZW50KCk7XHJcblx0XHRcdGJyZWFrO1xyXG5cdFx0Y2FzZSBLRVlfQ09ERVMuZW5kOlxyXG5cdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHRcdG1vdmVGb2N1c1RvTGFzdEVsZW1lbnQoKTtcclxuXHRcdFx0YnJlYWs7XHJcblx0fVxyXG59O1xyXG5cclxuY29uc3QgbW92ZUZvY3VzVXAgPSBpZHggPT4ge1xyXG5cdGNvbnN0IHByZXZJZHggPSAoYWNjb3JkaW9uQnRucy5sZW5ndGggKyBpZHggLSAxKSAlIGFjY29yZGlvbkJ0bnMubGVuZ3RoO1xyXG5cdGFjY29yZGlvbkJ0bnNbcHJldklkeF0uZm9jdXMoKTtcclxuXHRyZXR1cm4gcHJldklkeDtcclxufTtcclxuXHJcbmNvbnN0IG1vdmVGb2N1c0Rvd24gPSBpZHggPT4ge1xyXG5cdGNvbnN0IG5leHRJZHggPSAoaWR4ICsgMSkgJSBhY2NvcmRpb25CdG5zLmxlbmd0aDtcclxuXHRhY2NvcmRpb25CdG5zW25leHRJZHhdLmZvY3VzKCk7XHJcblx0cmV0dXJuIG5leHRJZHg7XHJcbn07XHJcblxyXG5jb25zdCBtb3ZlRm9jdXNUb0ZpcnN0RWxlbWVudCA9IF8gPT4ge1xyXG5cdGFjY29yZGlvbkJ0bnNbMF0uZm9jdXMoKTtcclxuXHRyZXR1cm4gMDtcclxufTtcclxuXHJcbmNvbnN0IG1vdmVGb2N1c1RvTGFzdEVsZW1lbnQgPSBfID0+IHtcclxuXHRhY2NvcmRpb25CdG5zW2FjY29yZGlvbkJ0bnMubGVuZ3RoIC0gMV0uZm9jdXMoKTtcclxuXHRyZXR1cm4gYWNjb3JkaW9uQnRucy5sZW5ndGggLSAxO1xyXG59O1xyXG5cclxuLyogZm9ybSBoYW5kbGluZyAqL1xyXG5jb25zdCBoYW5kbGVPcHRJblN1Ym1pdCA9IGUgPT4ge1xyXG5cdGUucHJldmVudERlZmF1bHQoKTtcclxuXHRjb25zdCB2YWx1ZSA9IG9wdEluRm9ybUlucHV0LnZhbHVlO1xyXG5cclxuXHRpZiAoaXNCbGFuayh2YWx1ZSkpIHNob3dNZXNzYWdlKCdlcnJvcicsICdUaGlzIGZpZWxkIGNhbm5vdCBiZSBlbXB0eScpO1xyXG5cdGVsc2UgaWYgKCFpc1ZhbGlkRW1haWwodmFsdWUpKSBzaG93TWVzc2FnZSgnZXJyb3InLCBcIldob29wcywgbWFrZSBzdXJlIGl0J3MgYW4gZW1haWxcIik7XHJcblx0ZWxzZSBzaG93TWVzc2FnZSgnc3VjY2VzcycsICdTdWNjZXNzZnVsbHkgcmVnaXN0ZXJlZC4gQ2hlY2sgeW91ciBlbWFpbCBib3guJyk7XHJcbn07XHJcblxyXG5jb25zdCBzaG93TWVzc2FnZSA9IChzdGF0dXMsIG1lc3NhZ2UpID0+IHtcclxuXHRvcHRJbkZvcm1JbnB1dEJveC5zZXRBdHRyaWJ1dGUoJ2RhdGEtc3RhdHVzJywgc3RhdHVzKTtcclxuXHRvcHRJbkZvcm1NZXNzYWdlLmlubmVyVGV4dCA9IG1lc3NhZ2U7XHJcbn07XHJcblxyXG5jb25zdCBpc1ZhbGlkRW1haWwgPSBlbWFpbCA9PiBFTUFJTF9SRUdFWC50ZXN0KGVtYWlsKTtcclxuXHJcbmNvbnN0IGlzQmxhbmsgPSB2YWx1ZSA9PiB2YWx1ZSA9PT0gJyc7XHJcblxyXG4vKiBldmVudCBsaXN0ZW5lcnMgKi9cclxubmF2VG9nZ2xlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlTmF2VG9nZ2xlKTtcclxuZmVhdHVyZXNDb250cm9sQnRucy5mb3JFYWNoKGN0cmxCdG4gPT4gY3RybEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZUZlYXR1cmVzQ29udHJvbEJ1dHRvbikpO1xyXG5hY2NvcmRpb25CdG5zLmZvckVhY2goYnRuID0+IGJ0bi5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgaGFuZGxlS2V5UHJlc3MpKTtcclxub3B0SW5Gb3JtU3VibWl0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlT3B0SW5TdWJtaXQpO1xyXG5cclxuaW5pdEZlYXR1cmVzQ29udHJvbEJ0bnMoKTtcclxuIl19
